import React, { useState, useEffect } from "react";
import emailjs from "emailjs-com";
import "./FeedbackForm.css";
import AOS from "aos";
import "aos/dist/aos.css";

const CustomerSupport = () => {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    message: "",
  });
  const [isSuccess, setIsSuccess] = useState(false);
  const [isError, setIsError] = useState(false);
  const [activeSection, setActiveSection] = useState("faqs");

  const questions = [
    {
      question:
        "C√≥ 3 l·ªç m·∫•t nh√£n ch·ª©a 3 dung d·ªãch : HCl, H2SO4.Na2SO4. B·∫±ng ph∆∞∆°ng ph√°p ho√° h·ªçc h√£y nh√¢n bi·∫øt m·ªói l·ªç v√† vi·∫øt ph∆∞∆°ng tr√¨nh ph·∫£n ·ª©ng",
      answer: "Nh·∫ßm ch·ªó r·ªìi n√≠.",
    },
    {
      question: "Nh√† h√†ng c√≥ skibidi kh√¥ng?",
      answer:
        "B·ªìn c·∫ßu v·ªá sinh th∆∞∆°ng hi·ªáu Viglacera l√† h√£ng thi·∫øt b·ªã v·ªá sinh n·ªïi ti·∫øng c·ªßa Italy, hi·ªán ƒë√£ c√≥ m·∫∑t ·ªü g·∫ßn 100 qu·ªëc gia tr√™n th·∫ø gi·ªõi. K·ªÉ t·ª´ khi c√≥ m·∫∑t t·∫°i th·ªã tr∆∞·ªùng Vi·ªát Nam, b√†n c·∫ßu Viglacera ƒë√£ nhanh ch√≥ng chinh ph·ª•c ƒë∆∞·ª£c ƒë√¥ng ƒë·∫£o ng∆∞·ªùi ti√™u d√πng nh·ªù ch·∫•t l∆∞·ª£ng s·∫£n ph·∫©m l·∫´n gi√° th√†nh ph·∫£i chƒÉng.",
    },
    {
      question: "S·ªëp c√≥ ship ƒë·ªì xa kh√¥ng? M√¨nh ·ªü M·ªπ(ƒê√¨nh) mu·ªën ƒë·∫∑t m√≥n.",
      answer: "Kh√¥ng.",
    },
    {
      question: "Assmin c√≥ ny ch∆∞a?",
      answer: "M√¨nh ƒë√£ l·∫≠p gia ƒë√¨nh. V·ª£ m√¨nh l√† Fu l√πn.",
    },
  ];

  const contactMethods = [
    { method: "Phone", detail: "03295569941", icon: "üìû" },
    { method: "Email", detail: "maibui7879@gmail.com", icon: "‚úâÔ∏è" },
    { method: "Zalo", detail: "0329556941", icon: "üí¨" },
    { method: "Messenger", detail: "ƒê·ª©c M·∫°nh", icon: "üì±" },
  ];

  useEffect(() => {
    AOS.init({
      duration: 1000,
      easing: "ease-in-out",
      once: true,
    });
  }, []);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    emailjs
      .send(
        "service_sdcvjvb",
        "template_sy2cpf5",
        {
          name: formData.name,
          email: formData.email,
          message: formData.message,
        },
        "mhTSS6RGrkSJvy5wd"
      )
      .then(
        () => {
          setIsSuccess(true);
          setIsError(false);
          setFormData({ name: "", email: "", message: "" });
        },
        (error) => {
          console.error("EmailJS Error:", error);
          setIsSuccess(false);
          setIsError(true);
        }
      );
  };

  return (
    <div className="flex min-h-screen feedback-form">
      {/* Sidebar */}
      <div className="sidebar w-1/8">
        <h2 className="text-2xl font-bold mb-6 text-white">ChƒÉm s√≥c kh√°ch h√†ng</h2>
        <ul className="space-y-4">
          <li>
            <button
              onClick={() => setActiveSection("faqs")}
              className={`w-full text-left bg-transparent text-white hover:text-blue-500 rounded py-2 ${
                activeSection === "faqs" ? "font-bold" : ""
              }`}
            >
              FAQs
            </button>
          </li>
          <li>
            <button
              onClick={() => setActiveSection("contact")}
              className={`w-full text-left bg-transparent text-white hover:text-blue-500 rounded py-2 ${
                activeSection === "contact" ? "font-bold" : ""
              }`}
            >
              Th√¥ng tin li√™n h·ªá
            </button>
          </li>
          <li>
            <button
              onClick={() => setActiveSection("form")}
              className={`w-full text-left bg-transparent text-white hover:text-blue-500 rounded py-2 ${
                activeSection === "form" ? "font-bold" : ""
              }`}
            >
              Form ph·∫£n h·ªìi
            </button>
          </li>
        </ul>
      </div>

      {/* Main Content */}
      <div className="w-full p-6 main-content-1">
        <h2 className="font-fancy mx-auto">ChƒÉm s√≥c kh√°ch h√†ng</h2>
        {activeSection === "faqs" && (
          <section className="mb-8 bg-white px-8 py-8 rounded-lg">
            <h4 className="text-xl font-semibold mb-4 text-left" data-aos="fade-up">
              Nh·ªØng c√¢u h·ªèi th∆∞·ªùng g·∫∑p
            </h4>
            <ul className="space-y-4" data-aos="fade-up">
              {questions.map((item, index) => (
                <li key={index} >
                  <button className="w-full text-left py-2 px-4 bg-white shadow rounded hover:shadow-md focus:outline-none">
                    <b>{item.question}</b>
                  </button>
                  <p className="mt-2 p-4 bg-indigo-50 border-l-4 border-indigo-400 text-gray-700 rounded">
                    <p className="text-left">{item.answer}</p>
                  </p>
                </li>
              ))}
            </ul>
          </section>
        )}

        {activeSection === "contact" && (
          <section className="mb-8 h-screen bg-gradient-to-t">
            <h4 className="text-xl font-semibold my-4 text-left" data-aos="fade-up">
              Th√¥ng tin li√™n h·ªá
            </h4>
            <div className="grid grid-cols-2 gap-4" data-aos="fade-up">
              {contactMethods.map((method, index) => (
                <div
                  key={index}
                  className="flex items-center p-4 bg-white shadow rounded hover:shadow-lg transition-all"
                  data-aos="fade-up"
                  data-aos-delay={index * 100}
                >
                  <span className="text-3xl mr-4">{method.icon}</span>
                  <div>
                    <h5 className="font-bold">{method.method}</h5>
                    <p className="text-gray-600">{method.detail}</p>
                  </div>
                </div>
              ))}
            </div>
          </section>
        )}

        {activeSection === "form" && (
          <section>
            <form onSubmit={handleSubmit} className="space-y-4 bg-white p-6 shadow rounded my-8" data-aos="fade-up">
              <h2 className="text-left text-2xl border-b border-black py-4"><b>Form ph·∫£n h·ªìi</b></h2>
              <div>
                
                <label htmlFor="name" className="block text-gray-700 font-bold mb-2">
                  T√™n:
                </label>
                <input
                  type="text"
                  id="name"
                  placeholder="Nguy·ªÖn VƒÉn A"
                  name="name"
                  value={formData.name}
                  onChange={handleChange}
                  className="w-full p-2 border rounded focus:ring focus:ring-indigo-300"
                  required
                />
              </div>

              <div>
                <label htmlFor="email" className="block text-gray-700 font-bold mb-2">
                  Email ho·∫∑c SDT:
                </label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  placeholder="abc@gmail.com"
                  value={formData.email}
                  onChange={handleChange}
                  className="w-full p-2 border rounded focus:ring focus:ring-indigo-300"
                  required
                />
              </div>

              <div>
                <label htmlFor="message" className="block text-gray-700 font-bold mb-2">
                  Ph·∫£n h·ªìi:
                </label>
                <textarea
                  id="message"
                  name="message"
                  placeholder="Ph·∫£n h·ªìi c·ªßa b·∫°n"
                  value={formData.message}
                  onChange={handleChange}
                  rows="4"
                  className="w-full p-2 border rounded focus:ring focus:ring-indigo-300"
                  required
                />
              </div>

              <button
                type="submit"
                className="py-2 px-6 bg-indigo-500 text-white font-bold rounded hover:bg-indigo-700"
              >
                Submit
              </button>

              {isSuccess && (
                <p className="mt-4 text-green-500 font-semibold">
                  Feedback submitted successfully!
                </p>
              )}
              {isError && (
                <p className="mt-4 text-red-500 font-semibold">
                  Failed to send feedback. Please try again later.
                </p>
              )}
            </form>
          </section>
        )}
      </div>
    </div>
  );
};

export default CustomerSupport;
